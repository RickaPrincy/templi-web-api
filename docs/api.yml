openapi: 3.0.0
paths:
  /auth/github/callback:
    get:
      operationId: AuthController_handleGithubAppCallback
      parameters:
        - name: code
          required: true
          in: query
          schema:
            type: string
        - name: installation_id
          required: true
          in: query
          schema:
            type: string
        - name: setup_action
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Security
  /whoami:
    get:
      operationId: whoami
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Security
  /ping:
    get:
      operationId: ping
      parameters: []
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: ''
      summary: ''
      tags:
        - Health
  /dummies:
    get:
      operationId: getDummies
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Health
  /users/{id}/installations:
    get:
      operationId: getInstallationsByUserId
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GithubInstallation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /templates/{id}:
    get:
      operationId: getTemplateById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Resources
  /templates:
    get:
      operationId: getTemplates
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateTemplates
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Template'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /templates/{id}/generate:
    put:
      operationId: generateProject
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateProjectPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateProjectPayload'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Resources
info:
  title: Templi
  description: >-
    Templi is a tool that simplifies boilerplate creation and usage, available
    as both a library and a CLI.
  version: 0.0.1
  contact: {}
tags:
  - name: Health
    description: ''
  - name: Security
    description: ''
servers:
  - url: https://templi.vercel.app
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Whoami:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        avatar:
          type: string
        token:
          type: string
      required:
        - id
        - name
        - email
        - avatar
        - token
    ApiResponseError:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
        - error
    Dummy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    GithubInstallation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orgName:
          type: string
        isOrg:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - orgName
        - isOrg
        - createdAt
        - updatedAt
    Template:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        scope:
          type: string
        url:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - scope
        - url
        - description
        - createdAt
        - updatedAt
    Value:
      type: object
      properties:
        name:
          type: string
        value:
          type: object
      required:
        - name
        - value
    GenerateProjectPayload:
      type: object
      properties:
        repositoryName:
          type: string
        isPrivate:
          type: boolean
        installationId:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
      required:
        - repositoryName
        - isPrivate
        - installationId
        - values
